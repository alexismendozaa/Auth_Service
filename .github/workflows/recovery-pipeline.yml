name: Docker Image Build and Deploy

on:
  push:
    branches:
      - test

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Show current directory and list files (diagnostic)
        run: |
          pwd
          ls -la
          ls -la ./  # List root files to confirm Dockerfile exists

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/recovery-ms:latest .

      - name: Push Docker image to DockerHub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/recovery-ms:latest

      - name: SSH to EC2 and deploy Docker container
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.RECOVERY_EC2_HOST }}
          username: ${{ secrets.EC2_SSH_KEY }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker stop recovery-ms || true
            docker rm recovery-ms || true
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/recovery-ms:latest
            docker run -d --name recovery-ms -p 8002:3002 \
              -e APP_URL=${{ secrets.APP_URL }} \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }} \
              -e EMAIL_USER=${{ secrets.EMAIL_USER }} \
              -e EMAIL_PASS=${{ secrets.EMAIL_PASS }} \
              -e S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/recovery-ms:latest
            docker ps -q --filter "name=recovery-ms" || exit 1
