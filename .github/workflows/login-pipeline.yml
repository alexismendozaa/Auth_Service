name: Login Service CI/CD

on:
  push:
    branches: [test]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./login-ms
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/login-ms:latest

  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key
          chmod 600 ~/.ssh/ec2_key
          ssh-keyscan ${{ secrets.LOGIN_EC2_HOST }} >> ~/.ssh/known_hosts
          
          # Verificación de la clave (debug)
          ls -la ~/.ssh
          ssh-keygen -lf ~/.ssh/ec2_key

      - name: Test SSH connection
        run: |
          ssh -v -i ~/.ssh/ec2_key ubuntu@${{ secrets.LOGIN_EC2_HOST }} echo "Conexión SSH exitosa!"

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/ec2_key ubuntu@${{ secrets.LOGIN_EC2_HOST }} << 'EOF'
          # Detener y eliminar contenedor anterior si existe
          sudo docker stop login-ms || true
          sudo docker rm login-ms || true
          
          # Descargar la imagen
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/login-ms:latest
          
          # Ejecutar la nueva imagen
          sudo docker run -d \
            --name login-ms \
            -p 8081:8081 \
            --restart unless-stopped \
            ${{ secrets.DOCKERHUB_USERNAME }}/login-ms:latest
          EOF